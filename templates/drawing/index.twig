{% extends "layout.twig" %}

{% block title %}Tirage au sort SOD - {{ parent() }}{% endblock %}

{% block content %}
<div class="neumorphic-container">
    <h1 class="neumorphic-title-red">Tirage au sort Speaker of the Day</h1>

    <form id="drawing-form" class="neumorphic-form">
        <div class="form-group">
            <label for="date">Date du tirage :</label>
            <input type="date" id="date" name="date" class="neumorphic-input" required>
        </div>

        <div class="form-group">
            <label>Cohortes participantes :</label>
            {% for cohort in cohorts %}
                <div class="checkbox-wrapper">
                    <input type="checkbox" id="cohort-{{ cohort.id }}" name="cohort_ids[]" value="{{ cohort.id }}">
                    <label for="cohort-{{ cohort.id }}">{{ cohort.name }}</label>
                </div>
            {% endfor %}
        </div>

        <button type="submit" class="neumorphic-button">Effectuer le tirage</button>
    </form>

   <div id="result" class="neumorphic-card" style="display: none; min-width: 90%; margin: 15px 0">
    <h2>RÃ©sultats des tirages</h2>
    <ul id="drawing-results"></ul>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const drawingForm = document.getElementById('drawing-form');
    const resultDiv = document.getElementById('result');
    const drawingResultsList = document.getElementById('drawing-results');

    if (drawingForm) {
        drawingForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            fetch('/drawing/perform', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    drawingResultsList.innerHTML = '';
                    for (const [date, student] of Object.entries(data.drawings)) {
                        const li = document.createElement('li');
                        li.textContent = `${date}: ${student.first_name} ${student.last_name}`;
                        drawingResultsList.appendChild(li);
                    }
                    resultDiv.style.display = 'block';
                } else {
                    drawingResultsList.innerHTML = `<li>${data.message}</li>`;
                    resultDiv.style.display = 'block';
                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                drawingResultsList.innerHTML = '<li>Une erreur est survenue lors du tirage au sort.</li>';
                resultDiv.style.display = 'block';
            });
        });
    }
});
</script>
{% endblock %}